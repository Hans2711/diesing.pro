name: Laravel

on:
  push:
    branches: [ "master" ]

jobs:
  laravel-tests:

    runs-on: ubuntu-latest

    steps:
    - uses: shivammathur/setup-php@15c43e89cdef867065b0213be354c2841860869e
      with:
        php-version: '8.4'
    - uses: actions/checkout@v4

    # Set up Node.js and install front-end dependencies
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'  # Or whatever version you're using for Vite

    - name: Install NPM dependencies
      run: npm install

    - name: Build assets
      run: npm run build  # Or the specific command for building assets in your project

    # Set up environment
    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Generate key
      run: php artisan key:generate

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Create Database
      run: |
        mkdir -p database
        touch database/database.sqlite
        chmod 777 database/database.sqlite  # Ensure the SQLite file is writable

    - name: Migrate Database
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan migrate --force

    - name: Seed Database
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: php artisan db:seed --force

    - name: Check if users table exists
      run: sqlite3 database/database.sqlite "SELECT name FROM sqlite_master WHERE type='table';"

    - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/database.sqlite
      run: |
        php artisan test
    - name: Deploy to Production
      if: success()
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: diesing.pro
        username: diesi
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd /var/www/vhosts/diesing.pro
          git pull origin master
          composer install --no-interaction --prefer-dist --optimize-autoloader
          php artisan migrate --force
          php npm run build
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
